// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kolokwiumPoprawa.Data;

#nullable disable

namespace kolokwiumPoprawa.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    partial class AppDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kolokwiumPoprawa.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) UNIQUE");

                    b.HasKey("Id");

                    b.ToTable("Language", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Spanish"
                        });
                });

            modelBuilder.Entity("kolokwiumPoprawa.Models.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExecutionTime")
                        .HasColumnType("bigint");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId")
                        .IsUnique();

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TaskId")
                        .IsUnique();

                    b.ToTable("Record", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 21, 10, 1, 3, 228, DateTimeKind.Local).AddTicks(4340),
                            ExecutionTime = 123456L,
                            LanguageId = 1,
                            StudentId = 1,
                            TaskId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 21, 10, 1, 3, 229, DateTimeKind.Local).AddTicks(9648),
                            ExecutionTime = 654321L,
                            LanguageId = 2,
                            StudentId = 2,
                            TaskId = 2
                        });
                });

            modelBuilder.Entity("kolokwiumPoprawa.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250) UNIQUE");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jakub.Daniel@pjatk.pl",
                            FirstName = "Jakub",
                            LastName = "Daniel"
                        },
                        new
                        {
                            Id = 2,
                            Email = "julia.Daniel@pjatk.pl",
                            FirstName = "Julia",
                            LastName = "Daniel"
                        });
                });

            modelBuilder.Entity("kolokwiumPoprawa.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description for Task1",
                            Name = "Task1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description for Task2",
                            Name = "Task2"
                        });
                });

            modelBuilder.Entity("kolokwiumPoprawa.Models.Record", b =>
                {
                    b.HasOne("kolokwiumPoprawa.Models.Language", "Language")
                        .WithOne("Record")
                        .HasForeignKey("kolokwiumPoprawa.Models.Record", "LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kolokwiumPoprawa.Models.Student", "Student")
                        .WithOne("Record")
                        .HasForeignKey("kolokwiumPoprawa.Models.Record", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kolokwiumPoprawa.Models.Task", "Task")
                        .WithOne("Record")
                        .HasForeignKey("kolokwiumPoprawa.Models.Record", "TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Student");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("kolokwiumPoprawa.Models.Language", b =>
                {
                    b.Navigation("Record")
                        .IsRequired();
                });

            modelBuilder.Entity("kolokwiumPoprawa.Models.Student", b =>
                {
                    b.Navigation("Record")
                        .IsRequired();
                });

            modelBuilder.Entity("kolokwiumPoprawa.Models.Task", b =>
                {
                    b.Navigation("Record")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
